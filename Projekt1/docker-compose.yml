version: "3"
services:
    myredis:
        container_name: myredis
        networks:
            - mymulticont
        image: redis:alpine
        # Port tylko dla celów dydaktycznych
        # ports:
        #   - 6000:6379

    mypostgres:
        container_name: mypostgres
        networks: 
            - mymulticont
        image: postgres:alpine
        volumes:
            - ./postgresdata:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: 1qaz2wsx
        # Port tylko dla celów dydaktycznych
        # ports:
        #   - 7000:5432

    mybackend:
        container_name: mybackend
        restart: always
        networks:
            - mymulticont
        build:
            dockerfile: Dockerfile
            context: ./mybackend
        depends_on:
            - mypostgres
            - myredis
        command: ["./wait-for-postgres.sh", "mypostgres", "node", "index.js"]
        # Port tylko dla celów dydaktycznych
        # ports:
        #     - 8000:5000

    myfrontend:
        container_name: myfrontend
        networks:
            - mymulticont
        build:
            dockerfile: Dockerfile.dev
            context: ./myfrontend
        volumes:
            - /opt/myapp/node_modules
            - ./myfrontend:/opt/myapp
        # ports:
        #     - '7070:3000'
        
        environment:
            CHOKIDAR_USEPOLLING: 'true'

    mynginx:
        container_name: mynginx
        restart: always
        networks:
            - mymulticont
        build:
            dockerfile: Dockerfile
            context: ./mynginx
        ports:
            - '9000:80'
        

networks:
    mymulticont:
        name: mymulticont

volumes:
    postgresdata:
        name: postgresdata
    redisdata:
        name: redisdata


# docker-compose up --build
# docker-compose down